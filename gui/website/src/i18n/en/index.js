export default {
  layout: {
    header: {
      ordinos: "Ordinos - Online elections",
    },
    main: {
      create: "Create election",
      elections: "Current elections",
      info: "More Information",
      instruction: "Instruction",
    },
  },
  ComponentSave: {
    title: "Save election settings",
    hint: "It is possible to save a configuration file to create new elections more easily. " 
    + "This file saves the settings of an election. The file can be downloaded. After uploading a file "+
    "a configuration must be selected from the list of configuration to load it and change the settings.",
    filename: "Save configuration file as",
    filenamehint: "Filetype will be set automatically.",
    filename_rules_exist: "Please enter a name for the configuration file.",
    filename_rules_length: "The name must not be longer than 60 characters.",
    upload: "Configuration file",
    uploadhint: "Upload a file here. The file must not exceed 4MB and has to have the filetype '.json'.",
    download: "Download",
    configname: "Save configuration as",
    configname_rules_exist: "Please enter a name for the configuration.",
    configname_rules_length: "The name must not be longer than 60 characters.",
    confilist: "List of configurations",
    save: "Save",
    failure_uploading_file: "File could not be uploaded.",
  },
  ComponentJsonFileLoader: {
    headline: "Loading the election file",
    field: "To open your personal election file, click in the field below. A file window will open.",
    openfile: "In this file window, open the folder where" + 
    "your election file is located. Then select the file to open it" +
    "to open it.",
    error_config: "Could not connect to the BB server."
  },
  OrdinosExplained: {
    table_of_contents_title: "Table of contents",
    click_on_title: "Click on the corresponding title to jump to this topic:",
    what_is_ordinos: "What is the Ordinos System?",
    security_properties: "The Ordinos System is a modern electronic voting system (e-voting system) which is designed to achieve a variety of security properties, such as",
    verifiability_definition: "Each voter must be able to verify that her vote was counted correctly and that the overall result is correct.",
    accountability_definition: "Each voter must be able to verify that her vote was counted correctly and that the overall result is correct. Moreover, it should not only be possible to verify the result, but, if verification fails, it should be possible to identify misbehaving parties and hold them accountable for the failure.",
    and: "and",
    vote_privacy_definition: "The voter can decide for him/herself to whom he/she makes available which information about his/her vote, when and why.",
    helios_and_tally_hiding: "Ordinos extends the prominent Helios e-voting protocol. While in Helios the complete election result is published (the number of votes per candidate/choice), Ordinos supports tally-hiding elections:",
    tally_hiding_description: "It computes the election result, according to some result function, like the winner of the election, without revealing any other information to any party. In particular, if desired, it neither reveals the full tally consisting of all (aggregated or even individual) votes nor parts of it, except for the election result, according to the result function. Tally-Hiding-Systems like Ordinos offer many attractive features, such as strong privacy guarantees both for voters and for candidates, and protection against Italian Attacks.",
    how_to_use_ordinos: "How to use Ordinos?",
    how_to_use_introduction: "The election process consists of several steps on the website and in the app. The goal was to design the user interfaces in such a way that all voters of all age groups can participate in an election without any ambiguities. We have deliberately chosen a minimalist design, as the focus should be on function and comprehensibility. All pages are structured in such a way that a short sentence describes what the voter has to do here and underneath is the actual content. In the following, the design of the individual steps that a voter must perform are explained.",
    website_title: "Website",
    website_description: "The following describes every step in the voter supporting device, illustrated with some screenshots.",
    tutorial_title: "1.1 Tutorial",
    tutorial_description: "Before the actual voting starts, the voter has the option to start this demo mode as a step in the instructions. The tutorial consists of a popup that explains step by step what the voter has to do at each point. The voter may also call it again afterwards during the voting process.",
    loading_election_file_title: "1.2 Loading of an election file",
    loading_election_file_description: "The first step consists of reading the config file. Here the user must read the provided file to start the election process.",
    scanning_qr_code_title: "1.3 Scanning a QR-Code",
    scanning_qr_code_description: "In the second step, a QR-Code is displayed to the voter. The user does not have to do anything on the website but needs to scan the code with the app on his smartphone. Once he has scanned the QR-Code, he is automatically taken to the next step on the website.",
    election_page_title: "1.4 Election Page",
    multiple_choice_title: "1.4.1 Multiple Choice",
    election_page_description: "Before the voter begins the actual voting process, a pop-up window explains exactly how the election looks and works. Depending on the type of election, the voter takes the next step on one of the following pages. As soon as a choice of the voter is valid, the button below to encrypt the ballot is activated. The voter is then taken to the next step.",
    multiple_choice_description: "With multiple choice the candidates are listed and the voter gives his or her vote to one or more candidates by ticking the checkbox. In the info box the voter is shown if his or her vote is valid or not and if and how many more candidates he or she can vote for.",
    rating_title: "1.4.2 Rating",
    rating_description: "In the rating, points can be assigned to the candidates. This can be done by directly entering the number of points for each candidate or by dragging the slider to the desired number of points. How exactly the points distribution has to look like is explained to the voters at the beginning. If there is a number of points to be distributed among the candidates, there is the option to award the remaining points to a candidate with one click. If there is a fixed number of points that can be assigned to each candidate independently, there is the option to award the full number of points to a candidate with one click. The info box at the top gives information about whether the current points distribution is valid and if not, what has to be changed.",
    ranking_title: "1.4.3 Ranking",
    ranking_description_1: "The last type of election is ranking. The user interface distinguishes between ranking of one candidate per place and several candidates per place. With the ranking of one candidate per place the voter can assign the candidates their  rank by direct input or by clicking up and down to move them respectively. To make clear which candidate you have just moved, this candidate is highlighted for a moment.",
    ranking_description_2: "In the scenario of several candidates per rank, drag and drop was used, allowing the candidates to be dragged to the desired rank. The information field indicates whether enough candidates have been inserted at each rank and how many more candidates can be added per rank.",
    encryption_title: "1.5 Encryption",
    encryption_description: "In this step, the voter does not have to do anything but wait. Once the ballot has been encrypted, he or she will be asked to continue.",
    audit_or_submit_title: "1.6 Audit or submit",
    audit_or_submit_description: "Now the voter is asked if he wants to do an audit. If he decides to do so the next steps will be done on the app. Once the voter has completed all the steps in the app, he or she will be taken back to the election page on the website and the whole process will repeat. If the voter chooses not to take a test, the election is terminated.",
    app_title: "App",
    app_description: "The app consists of a start screen on which on the one hand running elections are displayed, on the other hand there is the option to scan a QR-Code. The scanning of a QR-Code is performed when the voter is on the website in step two where the QR-Code is displayed.",
    audit_title: "2.1 Audit",
    audit_description: "If the voter decides to take part in a test, the encryption is first checked and then his or her ballot is displayed. The ballot is displayed in the same design as it was submitted on the website. In figure 11 on the following page the multiple choice election was taken as an example. The voter must then confirm or reject the ballot if it is incorrect.",
    backend_title: "The architecture of Ordinos",
    backend_description: "If you want to know a deeper understanding about the architecture of Ordinos, click ",
    here: "here",
    figure_1: "Figure 1: Loading an Election",
    figure_2: "Figure 2: Scanning a QR-Code",
    figure_3: "Figure 3: Multiple Choice",
    figure_4: "Figure 4: Rating",
    figure_5: "Figure 5: Ranking",
    figure_6: "Figure 6:Drag and Drop Variant of Ranking",
    figure_7: "Figure 7: Encryption",
    figure_8: "Figure 8: Audit or Submit",
    figure_9: "Figure 9: Establish connection",
    figure_10: "Figure 10: Checking the Encryption",
  },
  ArchitectureExplained: {
    architecture_title: "The architecture of Ordinos",
    architecture_introduction: "The Ordinos architecture consists of three backend servers: Authentification Server, Bulletin Board Server and Trustee Server. The Authentification Server is at the center. The Authentification Server links the other two backend servers to the frontend. The Bulletin Board Server is responsible for storing and sharing data. Trustee servers are used to evaluate the election by independent instances.",
    bulletin_board_server_title: "Bulletin Board Server",
    bulletin_board_server_description_1: "The Bulletin Board Server is accessible via port 9002 and can be started with the command python3 start_bb_server.py. It offers the following HTTP interfaces:",
    bulletin_board_server_description_2: "The bulletin board web server can contain multiple bulletin board objects. For each choice, an object is instantiated with the corresponding ID.",
    authentification_server_title: "Authentification Server",
    authentification_server_description_1: "The Authentification Server is accessible via port 9001 and is the central instance. The server can be started with the command python3 start_as_server.py. It offers the following HTTP interfaces:",
    authentification_server_description_2: "This contains the objects bulletin_board_client and trustee_client, which are treated the same as the actual bulletin board and an actual trustee. However, in the background they access the real objects on HTTP requests and pass their responses.",
    trustee_server_title: "Trustee Server",
    trustee_server_description: "Trustee servers are accessible via ports 9003-9005 and are responsible for evaluating the election with multi-party computation. The server can be started with the python3 start_trustee_server.py command. This offers the following HTTP interfaces:",
    additional_title: "Additional Information",
    additional_description: "To understand the architecture in detail, you can read the following two papers and various sketches of the system: ",
    sketches: "Sketches",
  },
  ComponentForm: {
    title: "Election creation",
    headline: "Election settings",
    label_name_of_election: "Name of the election *",
    name_input: "Please enter a name for the election.",
    name_max_length: "The name must not be longer than 60 characters.",
    label_number_of_voters: "Number of voters *",
    number_of_voters: "Please enter the number of voters.",
    reasonable_number: "Please enter a reasonable number.",
    start_of_election: "Start of the election",
    end_of_election: "End of the election",
    candidates: "Candidates",
    label_name_of_candidate: "Name of the candidate *",
    name_of_candidate: "Please enter a name for the candidate.",
    party: "Party",
    placeholder_avatar: "Placeholder avatar",
    add_candidate: "Add candidate",
    ballot_paper: "Ballot paper",
    label_min_number_of_votes: "Minimum number of votes",
    min_number_of_votes: "Please indicate the minimum number of votes.",
    min_number_of_votes_message: "The minimum number of votes must not exceed the maximum number.",
    label_max_number_of_votes: "Maximal number of votes",
    max_number_of_votes: "Please indicate the maximum number of votes.",
    max_number_of_votes_message: "Maximum number of votes must not be less than the minimum number.",
    divide_number_of_points: "Number of points must be distributed among candidates.",
    label_number_of_points: "Exact number of all points to be distributed among the candidates.",
    number_of_points: "Please enter the number of points to be distributed.",
    label_max_number_of_points: "Maximum number of points per candidate",
    max_number_of_points: "Please enter the number of maximum points.",
    label_question_candidates_same_points: "May candidates be awarded the same number of points?",
    label_min_number_of_candidates_points: "Minimum number of candidates to be awarded points",
    min_number: "Please enter the minimum number.",
    not_greater_number_of_candidates: "This number must not be greater than the number of candidates.",
    label_rank_countings: "Number of ranks counting",
    rank_countings: "Please enter the number of ranks counting.",
    add_rank: "Add rank",
    points_for_rank: "Points for rank",
    smaller_value_than_previous_rank: "Please enter a smaller value than the previous rank.",
    larger_value_than_next_rank: "Please enter a larger value than the next rank",
    number_of_candidates_same_rank: "Number of candidates that may be placed on the same rank",
    hint_drag_and_drop: "If the value is greater than 1, the selection is made by drag and drop.",
    enter_number: "Please enter the number.",
    evaluation: "Evaluation",
    evaluation_dependence: "Evaluation options depend on the selected ballot format.",
    parliamentary: "parliamentary",
    description_of_borda: "In a Borda evaluation, preferences of the are determined based on a ranked list. The allocation of the score depends on the ballot type selected above. A checkbox ballot is evaluated as one would expect. Each check is a point. For Rating and Ranking, the points are determined by the settings. It is important to make sure that the setting \"Maximum number of points per vote\" is at least as large as the maximum number of points a candidate can achieve is set in the ballot.",
    label_number_of_winners: "Number of winners",
    number_of_winners: "Please enter the number of winners.",
    at_least_one_winner: "There must be at least one winner.",
    number_of_winners_max: "The number must not exceed the number of candidates.",
    max_number_of_points_per_vote: "Maximum number of points per vote",
    number_of_points_per_vote: "Please enter the number of points per vote.",
    value_of_point: "A vote must be worth at least one point.",
    min_score_winner: "Minimum score to be counted as a winner",
    hint_PointThresholdEvaluation: "If the limit is set higher than 0, then the choice is evaluated with PointThresholdEvaluation.",
    min_points: "Please enter the minimum score.",
    greater_zero: "The minimum score must be greater than 0.",
    implementation_method: "Implementation method",
    evalution_executed_as: "Evalution executed as ",
    add_evaluation: "Add evaluation",
    options: "Options",
    evaluation_of_condorcet: "Evaluation of Condorcet (Plain).",
    calc_candidates_half_borda_points: "The group of candidates that receives half of the Borda points is calculated.",
    lowest_copeland_score_smith_set: "The lowest Copeland score is calculated from the <b>Smith set</b>.",
    lowest_copeland_score: "The lowest Copeland score is calculated.",
    highest_copeland_score: "The highest Copeland score is calculated with winner <b>2 points, tie 1 point, loser 0 points.</b>",
    description_of_instant_runoff: "A single ranking is determined as the election result from the rankings in all the electoral votes. The basic idea is an election with subsequent runoffs, where the candidate with the fewest votes is eliminated in each ballot. The number of (here virtual) ballots is therefore equal to the number of candidates who are not elected.",
    hare_niemeyer: "The Hare-Niemeyer method is used for situations where a fixed number of seats needs to be assigned to candidates from different parties, where a voter typically votes only for the party and not the candidates themselves. - Hertel, Fabian, et al. \"Extending the Tally-Hiding Ordinos System: Implementations for Borda, Hare-Niemeyer, Condorcet, and Instant-Runoff Voting.\" Cryptology ePrint Archive (2021).",
    enter_sysID: "Please enter the SysID (0-3 for Normal, 4-5 for Alternative).",
    condition_of_sysID: "The SysID must be between 0 and 5.",
    enter_number_of_bits: "Please enter the number of bits (16 or 64).",
    condition_of_bits: "The number of bits must be 16 or 64.",
    parliamentary_ballot_properties: "The parliamentary election procedure leads to an allocation of seats for a certain party in the parliament relative to the votes for this party and the proportion of this to the ancestral votes of the election. There may also be a hurdle that a party has to cross in order to gain any seats at all.",
    label_seat_quanity: "Number of seats",
    seat_quanity: "Please enter the seat quantity.",
    condition_seat_set: "The seat set must be greater than 0.",
    min_number_of_votes: "Minimum number of votes needed",
    enter_clause: "Please enter the clause.",
    condition_of_clause: "The clause must be greater than 0 votes.",
    save_template: "Save election as template",
    create_election: "Create election",
    server_settings: "Server settings",
    authentication_server_ip: "Authentication server IP",
    security_settings: "Security settings",
    number_of_bits_for_encryption: "Number of bits for encryption",
    not_enough_bits: "64 bits are for testing! Encryption is not secure with so few bits.",
    label_number_of_trustees: "Number of trustees among which the private key is divided (shares).",
    number_of_shares: "Please enter the number of shares.",
    condition_for_trustees: "There must be at least 2 trustees for encryption to make sense.",
    condition_for_number_of_shares: "The number of shares cannot be less than the threshold.",
    number_of_partial_key_holders: "Number of partial key holders required for decryption (Threshold)",
    enter_treshold: "Please enter the threshold.",
    first_condition_for_threshold: "The threshold must be greater than 1.",
    second_condition_for_threshold: "The threshold cannot be greater than the number of shares.",
    ballot_creation_failed: "Evaluation of the ballot creation form failed.",
    election_success: "Election was created successfully.",
    election_failure: "Election was not created. Error in submit.",
    simple_evaluation_option: "Simple evaluation option:",
    seat_distribution_evaluation_option: "Seat distribution evaluation option:",
  },
  ComponentDragDrop: {
    available_candidates: "Available candidates",
    select_at_least_one_candidate_per_seat: "You must select at least one candidate per seat.",
    on_seat: "On seat ",
    still_fit: " still fit ",
    candidates: " candidates",
  },
  ComponentInfoBox: {
    reread_election_conditions: "To reread the exact election conditions, click",
    here: "HERE",
    you_have_a_total_of: "You have a total of ",
    points_please: " points to be awarded. Please distribute them among the candidates so that you have a total of exactly ",
    distribute_points: " distribute points.",
    per_candidate_max: "For each candidate, you can have a maximum of ",
    ties_allowed: "Ties are allowed. Thus, you may award the same number of points to candidates.",
    ties_not_allowed: "Ties are not allowed. Thus, you may not award the same number of points to any candidate.",
    at_least: "You must award points to at least ",
    award_points: " candidates.",
    award_points_instruction_slider: "You award points by moving the slider of the individual candidate(s) so that the desired number of points is awarded to the candidate.",
    award_points_instruction_manuelly: "Alternatively, you can manually enter the points to be awarded in the input field right next to the slider.",
    award_points_instruction_fill: "To distribute the remaining points to a candidate(s), click 'Fill' in the corresponding candidate's field.",
    order_ranking: "Please arrange the candidates in your desired order.",
    how_to_order_ranking: "To move a candidate one place up, or down, you can use the respective buttons. You can also enter the desired place in the number field to place the candidate in that position.",
    candidates_arranged_according_to_your_choice: "The candidates are arranged according to your choice, so the candidate at the top of the list is in 1st place and the candidate at the bottom of the list is in last place.",
    only_the_first: "Please note that only the first ",
    scored_places: " places will be scored.",
    evaluation_of_places: "The individual places will be weighted by the following points for the evaluation:",
    place: "Place ",
    receives: " receives ",
    points: " point(s)",
    check_off_candidates: "Please check off the candidates you would like to see.",
    choose_at_least: "You have to choose at least ",
    candidates: " candidates.",
    may_for_up_to: "You may vote for up to ",
    distribute_candidates: "Please distribute the candidates to the given places.",
    drag_candidates: "To do this, drag the candidate(s) to the desired place.",
    there_are: "Overall, there are ",
    places: " places.",
    each_place_occupied_once: "Each placement must be occupied at least once.",
    up_to: "There may be up to ",
    candidates_in_one_place: " candidates in one place.",
    weighting_of_places: "The individual places will be weighted by the following points for the evaluation:",
    new_line_place: "\nplace "
  },
  ComponentMultipleChoice: {
    vote_valid: "Your voting choice is valid!",
    you_can: "However, you can also vote for ",
    more_candidates: " more candidates.",
    elect_at_least_one_candidate: "You must elect at least one candidate",
    vote_invalid: "Your voting choice is not valid!"  
  },
  ComponentRanking: {
    place: "'Place '",
    vote_valid: "Your vote is already valid, yet you can still change the order of candidates.",
    please_note: "Please note that only the first ",
    evaluated_ranks: " rankings will be evaluated."
  },
  ComponentRating: {
    fill_up: "Fill up",
    full_score: "Full score",
    give_exactly: "You have to give exactly ",
    points_one: " points",
    you_still_have: "You still have ",
    points_two: " points to award.",
    tie_not_allowed: "Ties are not allowed. Please do not give two candidates the same score.",
    you_have_to_all: "You have to award points to all ",
    candidates: " candidates.",
    you_have_to_at_least: "You have to award points to at least ",
    only_awarding: "Right now, you're only awarding points to",
    points_candidates: " candidates.",
    voting_valid: "Your voting is valid.",
    voting_invalid: "Your voting is not valid!",
  },
  ComponentAuditOrSubmit: {
    review_submit: "Review / Submit",
    ballot_encrypted: "Your ballot has been encrypted!",
    send_off_or_test: "You can now either send off your ballot, or start a start a test.",
    what_does_the_test_do: "What does the test do?",
    smartphone_test: "During a test, your smartphone checks whether the encryption of the ballot ballot has been calculated correctly. This helps you to make sure that that your ballot has not been tampered with. For example, by a computer virus.",
    guarantee_security: "In order to be able to guarantee security, the tested ballot paper is discarded and",
    new_filling: "a new filling is required",
    test_or_send: "Afterwards you can test again, or send the ballot.",
    recommend_test_several_times: "It is recommended to test several times.",
    start_test: "Start test",
    send_test: " Do you really want to send your ballot?",
    send: "Send",
    return: "Return",
    cast_vote: "Cast vote",
  },
  ComponentBallot: {
    fill_in_ballot_paper: "Fill in ballot paper",
    encrypt_ballot: "Encrypt ballot",
  },
  ComponentEncryption: {
    calculate_encryption: "Calculate encryption",
    ballot_will_be_encrypted: "Your ballot will now be encrypted. This may take a few seconds, depending on the size of the ballot.",
    continue: "Continue",
    already_encrypted: "It has already been encrypted:",
  },
  ComponentShowQRCode: {
    scan_code: "Now scan this code with the app on your smartphone",
  },
  ComponentTutorial: {
    step_one: "Step 1: Read election file",
    open_election_file: " The first step is to open the provided election file.",
    click_on_box: "To do this, click on the box provided, whereupon a ",
    file_window: "file window",
    will_open: "  will open",
    open_election_file: "Open your election file.",
    next_step: "This will then be read in automatically and you will be taken to the next step.",
    step_two: "Step 2: Scan QR code",
    code_on_screen: "A QR code will appear on your screen.",
    open: "Open the ",
    on_your_phone: " on your smartphone and ",
    scan_code: " scan the QR code.",
    step_three: "Step 3: Connection is established",
    do_nothing: " In this step you do not have to do anything yourself.",
    connection: "By scanning the QR code in the previous step, a secure connection between your secure connection between your smartphone and your PC.",
    verification: "This connection is relevant for the verification of your choice.",
    step_four: "Step 4: Fill in ballot paper",
    fill_out_ballot: "Now fill out your ballot.",
    further_details: "Further details",
    appropriate_places: "for this are displayed at appropriate places.",
    after_voting: "After voting, your",
    ballot_encrypted: "ballots are automatically and securely encrypted!",
    step_five: "Step 5: Testing the ballot",
    send_or_test: "You can now send your ballot, or start a test. start.",
    what_does_the_test_do: "What does the test do?",
    smartphone_test: "During a test, your smartphone checks whether the encryption of the ballot has been calculated correctly. This helps you to make sure that there has been no manipulation of your ballot. For example, by a computer virus. ",
    guarantee_security: "In order to To be able to guarantee security, the tested ballot is discarded and",
    new_filling: "a new filling is required",
    test_or_send: "Afterwards you can test again, or send the ballot.",
    recommend_test_several_times: "It is recommended to test several times.",
    step_six: "Step 6: Submit the ballot",
    displayed_on_phone: " Once you have sent your ballot, the election will be displayed on your smartphone.",
    app_will_notify: "The app will notify you as soon as the results have been have been published. You can then also view them in the app view them. ",
    app_checks: "The app also automatically checks whether your vote was counted when the election was evaluated. This ensures that the entire election has proceeded correctly.",
    demo_mode: "Demo mode",
    start_demo_text: "You can now start a demo election. This is only for you to try out and get to know the online election. You do not cast a real vote.",
    start_demo_mode: "Start demo mode",
    more_information: "More information",
    know_more_about_ordinos: "You want to know more about Ordinos? For a more detailed explanation of the process of an election click",
    here: "Here",
    open_page_afterwards: "You can also open the page afterwards by clicking on the info button \"MORE ABOUT ORDINOS\" in the upper right corner.",
    info: "Info",
    call_instructions_again: "You can access these instructions again at any time by clicking on the \"INSTRUCTION\" info button in the upper right corner.",
    close: "Close",
    question_start_demo: "Do you want to start the demo mode?",
    reset_election: "The current electoral process is then reset.",
    cancel: "Cancel",
    start_demo: "Start demo",
  },
  Introduction: {
    click_on_white_box: "Click on the white box. Open the folder where your election file is stored and select this file. Then click on \"Open\".",
    open_app: "Open the app on your smartphone and click on \"Scan QR code\". The camera of your smartphone will open. Hold the camera on the QR code until you are guided to the next step.",
  },
  CommunicationInterface: {
    connection_problem: "Connection problem! Please reload page and start over!",
  },
  CreationLayout: {
    start_evaluation: "Start evaluation",
    evaluation_successful: "Evaluation successfully carried out.",
    evaluation_error: "Evaluation error",
  },
  PageElect: {
    welcome: "Welcome",
    participate_in_election: "Here you can participate in an election online.",
    preconditions_for_participation: "Please make sure that you have installed the Ordinos app on your smartphone and that your smartphone and PC are connected to the Internet. Also make sure that your election file, which entitles you to vote, is on your PC.",
    read_instructions: "If you are performing an online election with Ordinos for the first time, we recommend that you read through the instructions.",
    start_voting: "Otherwise, you can close this display and start dialing directly.",
    close: "Close",
    instructions: "Instructions",
    waiting_for_verification: "Waiting for verification",
    take_phone_and_follow_steps: "Now take your smartphone and perform steps indicated there.",
    please_wait: "Please wait",
    waiting_for_confirmation: "Waiting for confirmation of the election management server",
    voting: "Voting ",
    you_are_voting_for: "You are voting for the ",
    time: " time.",
    casted_vote_successfully: "Your vote was successfully cast.",
    voting_done: "The voting is done. You can view the election results in the app on",
    view: ".",
    back_to_start: "Back to start",
    demo_success: "The demo election was carried out successfully.",
    voting_done_details: "The voting is ready. You can view more details in the app view.",
    end_demo: "End demo",
    verification_device_disconnected: "The connection to your verification device has been disconnected!",
    verification_failed: "The verification failed.",
    manipulation_possibility: "There is a possibility that your PC has tried to manipulate your choice. For example, due to a computer virus.",
    vote_not_sent: "Your vote was not sent! Perform the ballot on another device.",
    already_voted_once: "You have already voted once!",
    already_submitted_once: "You had already submitted a ballot! If this was not displayed on your smartphone during the last attempt, it should be visible now.",
    contact_developer: "However, if this is your first attempt at voting, please contact a developer.",
    general_error_condition: "A general error condition has occurred!",
    error: "An error has occurred.",
    send_developer_text: "Please send a(n) developer(s) the following diagnostic text:",
    reload_and_retry: "Now reload the page and try to vote again. If this message appears again, please contact a developer.",
    demo_is_for_trying_out: "This mode is for trying out and getting to know the online election. This is not your official vote!",
    question_leave_demo: "Do you really want to leave the demo mode?",
    continue_demo: "Continue demo",
    leave: "Leave",
    wrong_device_no_authentification: "Wrong device connected. No authentication",
    test_successful: "Test successful.",
    test_failed: "Test failed!",
    connection_to_device_disconnected: "Connection to the verification device disconnected!",
    vote_outside_polling_place: "Vote was cast outside the polling place.",
    not_eligible_to_vote: "Voter is not eligible to vote.",
  },
  ComponentCurrentElections: {
    creation_parameters: "Creation parameters",
    qr_codes: "QR codes",
    bulletin_board_is_reachable: "Bulletin board on server is reachable.",
    bulletin_board_error: "Bulletin board server is not reachable or board id not available.",
    bulletin_board_already_added: "Bulletin board was already added.",
    delete: "Delete",
    duplicate: "Duplicate",
    cancel: "Cancel",
    bb_server: "Bulletin board server",
    board_id: "Board id",
    status: "Status: ",
    done: "Done",
    in_progress: "In progress",
    delete_confirmation: "Should this election be deleted?",
    start: "Start: ",
    due: "Due: ",
    template: "Template: ",
    clear_configs: "Clear elections",
    load_election_template: "Load election template",
    no_template_uploaded: "No template was uploaded.",
    template_datatype_error: "Structure of election template does not match expected election datatype.",
    file_upload_unsuccessful: "File upload unsuccessful: ",
  },
  Architecture: {
    title: "The architecture of Ordinos",
    introduction: "The Ordinos architecture consists of three backend servers: Authentification Server, Bulletin Board Server and Trustee Server. The Authentification Server is at the center. The Authentification Server links the other two backend servers to the frontend. The Bulletin Board Server is responsible for storing and sharing data. Trustee servers are used to evaluate the election by independent instances.",
  },
  failed: "failure",
  succes: "success"
}
